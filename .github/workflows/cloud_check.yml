name: Auto Review PR
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

jobs:
  auto_review:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: master

      # 在这里添加您的自动审核逻辑
      - name: Run review script
        id: review
        run: |
          # 运行自动审核脚本或命令
          # 如果审核不通过，设置一个变量来存储原因
          # 例如：REVIEW_STATUS="不通过，原因是..."
          # 如果审核通过，设置一个变量来存储通过消息
          # 例如：REVIEW_STATUS="通过"

          # 示例逻辑：根据文件修改数量判断审核结果
          CHANGED_FILES=$(git diff --name-only origin/master)
          if [[ $(echo "$CHANGED_FILES" | wc -l) -gt 10 ]]; then
            REVIEW_STATUS="不通过，修改文件数量超过10个"
          else
            REVIEW_STATUS="通过"
          fi

          echo "::set-output name=status::${REVIEW_STATUS}"

      # 更新PR状态和添加评论
      - name: Update PR status and add comment
        uses: actions/github-script@v4
        with:
          github-token: ${{ secrets.DLP_GITHUB_TOKEN }}
          script: |
            const { data: pullRequest } = await github.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });

            let comment;
            if (process.env.REVIEW_STATUS === '通过') {
              comment = `
                自动审核结果：审核通过！
              `;
              await github.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                state: 'approved'
              });
            } else {
              comment = `
                自动审核结果：${{ env.REVIEW_STATUS }}
              `;
              await github.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: context.issue.number,
                state: 'changes_requested'
              });
            }

            await github.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: comment
            });